/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/index.js":
/*!********************************!*\
  !*** ./src/assets/js/index.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_headerLinks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/headerLinks */ \"./src/assets/js/modules/headerLinks.js\");\n/* harmony import */ var _modules_mobileMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/mobileMenu */ \"./src/assets/js/modules/mobileMenu.js\");\n/* harmony import */ var _modules_slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/slider */ \"./src/assets/js/modules/slider.js\");\n/* harmony import */ var _modules_vendor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/vendor */ \"./src/assets/js/modules/vendor.js\");\n/* harmony import */ var _modules_modalPhoto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/modalPhoto */ \"./src/assets/js/modules/modalPhoto.js\");\n/* harmony import */ var _modules_formGetInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/formGetInfo */ \"./src/assets/js/modules/formGetInfo.js\");\n\n\n\n\n\n\nwindow.addEventListener('load', function () {\n  'use strict';\n\n  (0,_modules_vendor__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n  (0,_modules_headerLinks__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('a');\n  (0,_modules_mobileMenu__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n  (0,_modules_slider__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n  (0,_modules_modalPhoto__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n  (0,_modules_formGetInfo__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n});\n\n//# sourceURL=webpack://big-theater/./src/assets/js/index.js?");

/***/ }),

/***/ "./src/assets/js/modules/checkInputs.js":
/*!**********************************************!*\
  !*** ./src/assets/js/modules/checkInputs.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar checkInputs = function checkInputs(event) {\n  var target = event.target,\n      targetName = target.name;\n\n  var delSpaceForwordBack = function delSpaceForwordBack() {\n    target.value = target.value.replace(/^(\\s*\\-*)*/g, '');\n    target.value = target.value.replace(/[\\s*\\-*]*$/g, '');\n  };\n\n  if (event.type === 'input') {\n    switch (targetName) {\n      case 'name':\n        //Ввод любых символов кроме <>\n        target.value = target.value.replace(/[\\<\\>\\!\\@\\#\\$\\%\\^\\*\\(\\)\\?\\|\\:\\;\\.\\,\\+\\-\\/]*/g, '');\n        target.value = target.value.replace(/\\d/g, '');\n        break;\n\n      case 'company':\n        //Ввод любых символов кроме <>\n        target.value = target.value.replace(/[\\<\\>\\!\\@\\#\\$\\%\\^\\*\\(\\)\\?\\|\\:\\;\\.\\,\\+\\-\\/]*/g, '');\n        break;\n\n      case 'textarea':\n      case 'email':\n        //Ввод любых символов кроме <>\n        target.value = target.value.replace(/[\\<\\>\\,\\+\\;\\\\\\/\\|]*/g, '');\n        break;\n    }\n  }\n\n  if (event.type === 'blur') {\n    switch (targetName) {\n      case 'name':\n      case 'company':\n        delSpaceForwordBack();\n        target.value = target.value.replace(/( |^)[а-яёa-z]/g, function (x) {\n          return x.toUpperCase();\n        });\n        break;\n\n      case 'email':\n        delSpaceForwordBack();\n        target.value = target.value.replace(/@+/g, '@');\n        target.value = target.value.replace(/\\-+/g, '-');\n        target.value = target.value.replace(/\\.+/g, '.');\n        break;\n\n      case 'textarea':\n        delSpaceForwordBack();\n        break;\n    }\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (checkInputs);\n\"\";\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/checkInputs.js?");

/***/ }),

/***/ "./src/assets/js/modules/formGetInfo.js":
/*!**********************************************!*\
  !*** ./src/assets/js/modules/formGetInfo.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _checkInputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checkInputs */ \"./src/assets/js/modules/checkInputs.js\");\n/* harmony import */ var _maskPhone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maskPhone */ \"./src/assets/js/modules/maskPhone.js\");\n/* harmony import */ var _validInputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validInputs */ \"./src/assets/js/modules/validInputs.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\nvar formGetInfo = function formGetInfo() {\n  var form = document.querySelector('form'),\n      inputs = document.querySelectorAll('.contacts__form-inputs'); //Работа с инпутами\n\n  inputs.forEach(function (input) {\n    input.addEventListener('input', _checkInputs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    input.addEventListener('blur', _checkInputs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n  }); //Маска для телефона\n\n  (0,_maskPhone__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('input[name=\"phone\"]'); //Типы сообщений при отправке на сервер\n\n  var message = {\n    loading: \"<div class=\\\"spinner\\\"></div>\",\n    success: '<div class=\"status__message success\">Скоро c вами свяжутся</div>',\n    error: '<div class=\"status__message error\">Произошла ошибка отправки ...</div>'\n  }; // Функция отправки данных (асинхронная функция)\n\n  var postData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url, data) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              document.querySelector('.status').innerHTML = message.loading;\n              _context.next = 3;\n              return fetch(url, {\n                method: 'POST',\n                body: data\n              });\n\n            case 3:\n              result = _context.sent;\n              _context.next = 6;\n              return result;\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function postData(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //Отчистка инпутов\n\n\n  var clearInputs = function clearInputs() {\n    inputs.forEach(function (input) {\n      input.classList.remove('success');\n      input.value = '';\n    });\n  }; //Обработчик формы\n\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault(); //Вывод ошибачных полей\n\n    var validInput = function validInput() {\n      var result = true;\n      inputs.forEach(function (input) {\n        (0,_validInputs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input);\n\n        if (input.classList.contains('error')) {\n          result = false;\n        }\n      });\n      return result;\n    };\n\n    if (validInput()) {\n      var statusMessage = document.createElement('div');\n      statusMessage.classList.add('status');\n      form.appendChild(statusMessage); //Создание формДаты глобального конструктора\n\n      var formData = new FormData(form);\n      postData('assets/server.php', formData).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('status not 200');\n        }\n\n        console.log(res);\n        statusMessage.innerHTML = message.success;\n      }).catch(function (err) {\n        console.log(err);\n        statusMessage.innerHTML = message.error;\n      }).finally(function () {\n        //Отчистка инпутов\n        clearInputs();\n        setTimeout(function () {\n          statusMessage.remove();\n        }, 500000);\n      });\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (formGetInfo);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/formGetInfo.js?");

/***/ }),

/***/ "./src/assets/js/modules/headerLinks.js":
/*!**********************************************!*\
  !*** ./src/assets/js/modules/headerLinks.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar headerLink = function headerLink(links) {\n  var items = document.querySelectorAll(\"\".concat(links));\n  items.forEach(function (headerItem) {\n    headerItem.addEventListener('click', function (event) {\n      if (!event.target.classList.contains('footer__link')) {\n        event.preventDefault();\n      }\n    });\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (headerLink);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/headerLinks.js?");

/***/ }),

/***/ "./src/assets/js/modules/maskPhone.js":
/*!********************************************!*\
  !*** ./src/assets/js/modules/maskPhone.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction maskPhone(selector) {\n  var masked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '+7 (___) ___-__-__';\n  var elems = document.querySelectorAll(selector);\n\n  function mask(event) {\n    var keyCode = event.keyCode;\n    var template = masked,\n        def = template.replace(/\\D/g, \"\"),\n        val = this.value.replace(/\\D/g, \"\");\n    var i = 0,\n        newValue = template.replace(/[_\\d]/g, function (a) {\n      return i < val.length ? val.charAt(i++) || def.charAt(i) : a;\n    });\n    i = newValue.indexOf(\"_\");\n\n    if (i != -1) {\n      newValue = newValue.slice(0, i);\n    }\n\n    var reg = template.substr(0, this.value.length).replace(/_+/g, function (a) {\n      return \"\\\\d{1,\" + a.length + \"}\";\n    }).replace(/[+()]/g, \"\\\\$&\");\n    reg = new RegExp(\"^\" + reg + \"$\");\n\n    if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) {\n      this.value = newValue;\n    }\n\n    if (event.type == \"blur\" && this.value.length < 5) {\n      this.value = \"\";\n    }\n  }\n\n  var _iterator = _createForOfIteratorHelper(elems),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var elem = _step.value;\n      elem.addEventListener(\"input\", mask);\n      elem.addEventListener(\"focus\", mask);\n      elem.addEventListener(\"blur\", mask);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (maskPhone);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/maskPhone.js?");

/***/ }),

/***/ "./src/assets/js/modules/mobileMenu.js":
/*!*********************************************!*\
  !*** ./src/assets/js/modules/mobileMenu.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar mobileMenu = function mobileMenu() {\n  var menuNavbar = document.querySelector('.header__nav');\n\n  var toggleMenu = function toggleMenu() {\n    menuNavbar.classList.toggle('active');\n  };\n\n  document.addEventListener('click', function (event) {\n    var target = event.target;\n\n    if (target.closest('.header__btn-open') || target.closest('.header__btn-close') || target.closest('.header__nav-item') || target.closest('.mobile-socials__item')) {\n      event.preventDefault();\n      toggleMenu();\n    } else {\n      if (!target.closest('.header__nav') && menuNavbar.classList.contains('active')) {\n        event.preventDefault();\n        toggleMenu();\n      }\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (mobileMenu);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/mobileMenu.js?");

/***/ }),

/***/ "./src/assets/js/modules/modalPhoto.js":
/*!*********************************************!*\
  !*** ./src/assets/js/modules/modalPhoto.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar modalPhoto = function modalPhoto() {\n  var modalWindow = document.querySelector('.modal'),\n      modalImg = document.querySelector('.modal__img > img');\n\n  var openModal = function openModal() {\n    modalWindow.classList.toggle('active');\n  };\n\n  document.addEventListener('click', function (e) {\n    var target = e.target;\n    var modalBtn = target.closest('.projects__icon');\n\n    if (modalBtn) {\n      var projectImg = modalBtn.nextElementSibling.firstElementChild.src,\n          projectTitle = modalBtn.parentNode.children[0].innerText,\n          modalTitle = modalWindow.querySelector('.modal__title');\n      modalTitle.innerText = projectTitle;\n      modalImg.src = projectImg;\n      openModal();\n    }\n\n    if (target.closest('.modal__close') || target.classList.contains('modal')) {\n      openModal();\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (modalPhoto);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/modalPhoto.js?");

/***/ }),

/***/ "./src/assets/js/modules/slider.js":
/*!*****************************************!*\
  !*** ./src/assets/js/modules/slider.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar slider = function slider() {\n  var nextBtn = document.querySelector('.arrows__next'),\n      prevBtn = document.querySelector('.arrows__prew'),\n      sliders = document.querySelectorAll('.offer__slider-item');\n  var index = 0;\n  var interval;\n\n  var activeSlider = function activeSlider(index) {\n    var _iterator = _createForOfIteratorHelper(sliders),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _slider = _step.value;\n\n        if (_slider.classList.contains('active')) {\n          _slider.classList.remove('active');\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    sliders[index].classList.add('active');\n  };\n\n  var nextSlid = function nextSlid() {\n    if (index === sliders.length - 1) {\n      index = 0;\n      activeSlider(index);\n    } else {\n      index++;\n      activeSlider(index);\n    }\n  };\n\n  var prevSlid = function prevSlid() {\n    if (index < 0) {\n      index = sliders.length - 1;\n      activeSlider(index);\n    } else {\n      index--;\n      activeSlider(index);\n    }\n  };\n\n  var autoPlay = function autoPlay() {\n    interval = setInterval(nextSlid, 3000);\n  };\n\n  var stopPlay = function stopPlay() {\n    clearInterval(interval);\n  };\n  /*Controls */\n\n\n  nextBtn.addEventListener('click', nextSlid);\n  prevBtn.addEventListener('click', prevSlid);\n  prevBtn.addEventListener('mouseout', autoPlay);\n  nextBtn.addEventListener('mouseout', autoPlay);\n  prevBtn.addEventListener('mouseover', stopPlay);\n  nextBtn.addEventListener('mouseover', stopPlay);\n  autoPlay();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (slider);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/slider.js?");

/***/ }),

/***/ "./src/assets/js/modules/validInputs.js":
/*!**********************************************!*\
  !*** ./src/assets/js/modules/validInputs.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar validInputs = function validInputs(input) {\n  var regExpName = /^[а-яёa-z]{2,}$/i,\n      regExpEmail = /^\\w+@\\w+\\.\\w{2,}$/,\n      regExpPhone = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\n\n  var checkInput = function checkInput(regExp, value, input) {\n    if (regExp.test(value)) {\n      if (input.classList.contains('error')) {\n        input.classList.remove('error');\n      }\n\n      input.classList.add('success');\n    } else {\n      if (input.classList.contains('success')) {\n        input.classList.remove('success');\n      }\n\n      input.classList.add('error');\n    }\n  };\n\n  var inpitValue = input.value,\n      inputName = input.name;\n\n  switch (inputName) {\n    case 'name':\n    case 'company':\n      checkInput(regExpName, inpitValue, input);\n      break;\n\n    case 'email':\n      checkInput(regExpEmail, inpitValue, input);\n      break;\n\n    case 'phone':\n      checkInput(regExpPhone, inpitValue, input);\n      break;\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (validInputs);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/validInputs.js?");

/***/ }),

/***/ "./src/assets/js/modules/vendor.js":
/*!*****************************************!*\
  !*** ./src/assets/js/modules/vendor.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var scrollbooster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! scrollbooster */ \"./node_modules/scrollbooster/src/index.js\");\n\n\nvar vendor = function vendor() {\n  var viewport = document.querySelector('.projects__content');\n  var content = document.querySelector('.projects__items');\n  new scrollbooster__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    viewport: viewport,\n    content: content,\n    direction: \"horizontal\",\n    scrollMode: \"transform\"\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (vendor);\n\n//# sourceURL=webpack://big-theater/./src/assets/js/modules/vendor.js?");

/***/ }),

/***/ "./node_modules/scrollbooster/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/scrollbooster/src/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ScrollBooster; }\n/* harmony export */ });\nconst getFullWidth = (elem) => Math.max(elem.offsetWidth, elem.scrollWidth);\nconst getFullHeight = (elem) => Math.max(elem.offsetHeight, elem.scrollHeight);\n\nconst textNodeFromPoint = (element, x, y) => {\n    const nodes = element.childNodes;\n    const range = document.createRange();\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node.nodeType !== 3) {\n            continue;\n        }\n        range.selectNodeContents(node);\n        const rect = range.getBoundingClientRect();\n        if (x >= rect.left && y >= rect.top && x <= rect.right && y <= rect.bottom) {\n            return node;\n        }\n    }\n    return false;\n};\n\nconst clearTextSelection = () => {\n    const selection = window.getSelection ? window.getSelection() : document.selection;\n    if (!selection) {\n        return;\n    }\n    if (selection.removeAllRanges) {\n        selection.removeAllRanges();\n    } else if (selection.empty) {\n        selection.empty();\n    }\n};\n\nconst CLICK_EVENT_THRESHOLD_PX = 5;\n\nclass ScrollBooster {\n    /**\n     * Create ScrollBooster instance\n     * @param {Object} options - options object\n     * @param {Element} options.viewport - container element\n     * @param {Element} options.content - scrollable content element\n     * @param {String} options.direction - scroll direction\n     * @param {String} options.pointerMode - mouse or touch support\n     * @param {String} options.scrollMode - predefined scrolling technique\n     * @param {Boolean} options.bounce - bounce effect\n     * @param {Number} options.bounceForce - bounce effect factor\n     * @param {Number} options.friction - scroll friction factor\n     * @param {Boolean} options.textSelection - enables text selection\n     * @param {Boolean} options.inputsFocus - enables focus on input elements\n     * @param {Boolean} options.emulateScroll - enables mousewheel emulation\n     * @param {Function} options.onClick - click handler\n     * @param {Function} options.onUpdate - state update handler\n     * @param {Function} options.onWheel - wheel handler\n     * @param {Function} options.shouldScroll - predicate to allow or disable scroll\n     */\n    constructor(options = {}) {\n        const defaults = {\n            content: options.viewport.children[0],\n            direction: 'all', // 'vertical', 'horizontal'\n            pointerMode: 'all', // 'touch', 'mouse'\n            scrollMode: undefined, // 'transform', 'native'\n            bounce: true,\n            bounceForce: 0.1,\n            friction: 0.05,\n            textSelection: false,\n            inputsFocus: true,\n            emulateScroll: false,\n            preventDefaultOnEmulateScroll: false, // 'vertical', 'horizontal'\n            preventPointerMoveDefault: true,\n            lockScrollOnDragDirection: false, // 'vertical', 'horizontal', 'all'\n            pointerDownPreventDefault: true,\n            dragDirectionTolerance: 40,\n            onPointerDown() {},\n            onPointerUp() {},\n            onPointerMove() {},\n            onClick() {},\n            onUpdate() {},\n            onWheel() {},\n            shouldScroll() {\n                return true;\n            },\n        };\n\n        this.props = { ...defaults, ...options };\n\n        if (!this.props.viewport || !(this.props.viewport instanceof Element)) {\n            console.error(`ScrollBooster init error: \"viewport\" config property must be present and must be Element`);\n            return;\n        }\n\n        if (!this.props.content) {\n            console.error(`ScrollBooster init error: Viewport does not have any content`);\n            return;\n        }\n\n        this.isDragging = false;\n        this.isTargetScroll = false;\n        this.isScrolling = false;\n        this.isRunning = false;\n\n        const START_COORDINATES = { x: 0, y: 0 };\n\n        this.position = { ...START_COORDINATES };\n        this.velocity = { ...START_COORDINATES };\n        this.dragStartPosition = { ...START_COORDINATES };\n        this.dragOffset = { ...START_COORDINATES };\n        this.clientOffset = { ...START_COORDINATES };\n        this.dragPosition = { ...START_COORDINATES };\n        this.targetPosition = { ...START_COORDINATES };\n        this.scrollOffset = { ...START_COORDINATES };\n\n        this.rafID = null;\n        this.events = {};\n\n        this.updateMetrics();\n        this.handleEvents();\n    }\n\n    /**\n     * Update options object with new given values\n     */\n    updateOptions(options = {}) {\n        this.props = { ...this.props, ...options };\n        this.props.onUpdate(this.getState());\n        this.startAnimationLoop();\n    }\n\n    /**\n     * Update DOM container elements metrics (width and height)\n     */\n    updateMetrics() {\n        this.viewport = {\n            width: this.props.viewport.clientWidth,\n            height: this.props.viewport.clientHeight,\n        };\n        this.content = {\n            width: getFullWidth(this.props.content),\n            height: getFullHeight(this.props.content),\n        };\n        this.edgeX = {\n            from: Math.min(-this.content.width + this.viewport.width, 0),\n            to: 0,\n        };\n        this.edgeY = {\n            from: Math.min(-this.content.height + this.viewport.height, 0),\n            to: 0,\n        };\n\n        this.props.onUpdate(this.getState());\n        this.startAnimationLoop();\n    }\n\n    /**\n     * Run animation loop\n     */\n    startAnimationLoop() {\n        this.isRunning = true;\n        cancelAnimationFrame(this.rafID);\n        this.rafID = requestAnimationFrame(() => this.animate());\n    }\n\n    /**\n     * Main animation loop\n     */\n    animate() {\n        if (!this.isRunning) {\n            return;\n        }\n        this.updateScrollPosition();\n        // stop animation loop if nothing moves\n        if (!this.isMoving()) {\n            this.isRunning = false;\n            this.isTargetScroll = false;\n        }\n        const state = this.getState();\n        this.setContentPosition(state);\n        this.props.onUpdate(state);\n        this.rafID = requestAnimationFrame(() => this.animate());\n    }\n\n    /**\n     * Calculate and set new scroll position\n     */\n    updateScrollPosition() {\n        this.applyEdgeForce();\n        this.applyDragForce();\n        this.applyScrollForce();\n        this.applyTargetForce();\n\n        const inverseFriction = 1 - this.props.friction;\n        this.velocity.x *= inverseFriction;\n        this.velocity.y *= inverseFriction;\n\n        if (this.props.direction !== 'vertical') {\n            this.position.x += this.velocity.x;\n        }\n        if (this.props.direction !== 'horizontal') {\n            this.position.y += this.velocity.y;\n        }\n\n        // disable bounce effect\n        if ((!this.props.bounce || this.isScrolling) && !this.isTargetScroll) {\n            this.position.x = Math.max(Math.min(this.position.x, this.edgeX.to), this.edgeX.from);\n            this.position.y = Math.max(Math.min(this.position.y, this.edgeY.to), this.edgeY.from);\n        }\n    }\n\n    /**\n     * Increase general scroll velocity by given force amount\n     */\n    applyForce(force) {\n        this.velocity.x += force.x;\n        this.velocity.y += force.y;\n    }\n\n    /**\n     * Apply force for bounce effect\n     */\n    applyEdgeForce() {\n        if (!this.props.bounce || this.isDragging) {\n            return;\n        }\n\n        // scrolled past viewport edges\n        const beyondXFrom = this.position.x < this.edgeX.from;\n        const beyondXTo = this.position.x > this.edgeX.to;\n        const beyondYFrom = this.position.y < this.edgeY.from;\n        const beyondYTo = this.position.y > this.edgeY.to;\n        const beyondX = beyondXFrom || beyondXTo;\n        const beyondY = beyondYFrom || beyondYTo;\n\n        if (!beyondX && !beyondY) {\n            return;\n        }\n\n        const edge = {\n            x: beyondXFrom ? this.edgeX.from : this.edgeX.to,\n            y: beyondYFrom ? this.edgeY.from : this.edgeY.to,\n        };\n\n        const distanceToEdge = {\n            x: edge.x - this.position.x,\n            y: edge.y - this.position.y,\n        };\n\n        const force = {\n            x: distanceToEdge.x * this.props.bounceForce,\n            y: distanceToEdge.y * this.props.bounceForce,\n        };\n\n        const restPosition = {\n            x: this.position.x + (this.velocity.x + force.x) / this.props.friction,\n            y: this.position.y + (this.velocity.y + force.y) / this.props.friction,\n        };\n\n        if ((beyondXFrom && restPosition.x >= this.edgeX.from) || (beyondXTo && restPosition.x <= this.edgeX.to)) {\n            force.x = distanceToEdge.x * this.props.bounceForce - this.velocity.x;\n        }\n\n        if ((beyondYFrom && restPosition.y >= this.edgeY.from) || (beyondYTo && restPosition.y <= this.edgeY.to)) {\n            force.y = distanceToEdge.y * this.props.bounceForce - this.velocity.y;\n        }\n\n        this.applyForce({\n            x: beyondX ? force.x : 0,\n            y: beyondY ? force.y : 0,\n        });\n    }\n\n    /**\n     * Apply force to move content while dragging with mouse/touch\n     */\n    applyDragForce() {\n        if (!this.isDragging) {\n            return;\n        }\n\n        const dragVelocity = {\n            x: this.dragPosition.x - this.position.x,\n            y: this.dragPosition.y - this.position.y,\n        };\n\n        this.applyForce({\n            x: dragVelocity.x - this.velocity.x,\n            y: dragVelocity.y - this.velocity.y,\n        });\n    }\n\n    /**\n     * Apply force to emulate mouse wheel or trackpad\n     */\n    applyScrollForce() {\n        if (!this.isScrolling) {\n            return;\n        }\n\n        this.applyForce({\n            x: this.scrollOffset.x - this.velocity.x,\n            y: this.scrollOffset.y - this.velocity.y,\n        });\n\n        this.scrollOffset.x = 0;\n        this.scrollOffset.y = 0;\n    }\n\n    /**\n     * Apply force to scroll to given target coordinate\n     */\n    applyTargetForce() {\n        if (!this.isTargetScroll) {\n            return;\n        }\n\n        this.applyForce({\n            x: (this.targetPosition.x - this.position.x) * 0.08 - this.velocity.x,\n            y: (this.targetPosition.y - this.position.y) * 0.08 - this.velocity.y,\n        });\n    }\n\n    /**\n     * Check if scrolling happening\n     */\n    isMoving() {\n        return (\n            this.isDragging ||\n            this.isScrolling ||\n            Math.abs(this.velocity.x) >= 0.01 ||\n            Math.abs(this.velocity.y) >= 0.01\n        );\n    }\n\n    /**\n     * Set scroll target coordinate for smooth scroll\n     */\n    scrollTo(position = {}) {\n        this.isTargetScroll = true;\n        this.targetPosition.x = -position.x || 0;\n        this.targetPosition.y = -position.y || 0;\n        this.startAnimationLoop();\n    }\n\n    /**\n     * Manual position setting\n     */\n    setPosition(position = {}) {\n        this.velocity.x = 0;\n        this.velocity.y = 0;\n        this.position.x = -position.x || 0;\n        this.position.y = -position.y || 0;\n        this.startAnimationLoop();\n    }\n\n    /**\n     * Get latest metrics and coordinates\n     */\n    getState() {\n        return {\n            isMoving: this.isMoving(),\n            isDragging: !!(this.dragOffset.x || this.dragOffset.y),\n            position: { x: -this.position.x, y: -this.position.y },\n            dragOffset: this.dragOffset,\n            dragAngle: this.getDragAngle(this.clientOffset.x, this.clientOffset.y),\n            borderCollision: {\n                left: this.position.x >= this.edgeX.to,\n                right: this.position.x <= this.edgeX.from,\n                top: this.position.y >= this.edgeY.to,\n                bottom: this.position.y <= this.edgeY.from,\n            },\n        };\n    }\n\n    /**\n     * Get drag angle (up: 180, left: -90, right: 90, down: 0)\n     */\n    getDragAngle(x, y) {\n        return Math.round(Math.atan2(x, y) * (180 / Math.PI));\n    }\n\n    /**\n     * Get drag direction (horizontal or vertical)\n     */\n    getDragDirection(angle, tolerance) {\n        const absAngle = Math.abs(90 - Math.abs(angle));\n\n        if (absAngle <= 90 - tolerance) {\n            return 'horizontal';\n        } else {\n            return 'vertical';\n        }\n    }\n\n    /**\n     * Update DOM container elements metrics (width and height)\n     */\n    setContentPosition(state) {\n        if (this.props.scrollMode === 'transform') {\n            this.props.content.style.transform = `translate(${-state.position.x}px, ${-state.position.y}px)`;\n        }\n        if (this.props.scrollMode === 'native') {\n            this.props.viewport.scrollTop = state.position.y;\n            this.props.viewport.scrollLeft = state.position.x;\n        }\n    }\n\n    /**\n     * Register all DOM events\n     */\n    handleEvents() {\n        const dragOrigin = { x: 0, y: 0 };\n        const clientOrigin = { x: 0, y: 0 };\n        let dragDirection = null;\n        let wheelTimer = null;\n        let isTouch = false;\n\n        const setDragPosition = (event) => {\n            if (!this.isDragging) {\n                return;\n            }\n\n            const eventData = isTouch ? event.touches[0] : event;\n            const { pageX, pageY, clientX, clientY } = eventData;\n\n            this.dragOffset.x = pageX - dragOrigin.x;\n            this.dragOffset.y = pageY - dragOrigin.y;\n\n            this.clientOffset.x = clientX - clientOrigin.x;\n            this.clientOffset.y = clientY - clientOrigin.y;\n\n            // get dragDirection if offset threshold is reached\n            if (\n                (Math.abs(this.clientOffset.x) > 5 && !dragDirection) ||\n                (Math.abs(this.clientOffset.y) > 5 && !dragDirection)\n            ) {\n                dragDirection = this.getDragDirection(\n                    this.getDragAngle(this.clientOffset.x, this.clientOffset.y),\n                    this.props.dragDirectionTolerance\n                );\n            }\n\n            // prevent scroll if not expected scroll direction\n            if (this.props.lockScrollOnDragDirection && this.props.lockScrollOnDragDirection !== 'all') {\n                if (dragDirection === this.props.lockScrollOnDragDirection && isTouch) {\n                    this.dragPosition.x = this.dragStartPosition.x + this.dragOffset.x;\n                    this.dragPosition.y = this.dragStartPosition.y + this.dragOffset.y;\n                } else if (!isTouch) {\n                    this.dragPosition.x = this.dragStartPosition.x + this.dragOffset.x;\n                    this.dragPosition.y = this.dragStartPosition.y + this.dragOffset.y;\n                } else {\n                    this.dragPosition.x = this.dragStartPosition.x;\n                    this.dragPosition.y = this.dragStartPosition.y;\n                }\n            } else {\n                this.dragPosition.x = this.dragStartPosition.x + this.dragOffset.x;\n                this.dragPosition.y = this.dragStartPosition.y + this.dragOffset.y;\n            }\n        };\n\n        this.events.pointerdown = (event) => {\n            isTouch = !!(event.touches && event.touches[0]);\n\n            this.props.onPointerDown(this.getState(), event, isTouch);\n\n            const eventData = isTouch ? event.touches[0] : event;\n            const { pageX, pageY, clientX, clientY } = eventData;\n\n            const { viewport } = this.props;\n            const rect = viewport.getBoundingClientRect();\n\n            // click on vertical scrollbar\n            if (clientX - rect.left >= viewport.clientLeft + viewport.clientWidth) {\n                return;\n            }\n\n            // click on horizontal scrollbar\n            if (clientY - rect.top >= viewport.clientTop + viewport.clientHeight) {\n                return;\n            }\n\n            // interaction disabled by user\n            if (!this.props.shouldScroll(this.getState(), event)) {\n                return;\n            }\n\n            // disable right mouse button scroll\n            if (event.button === 2) {\n                return;\n            }\n\n            // disable on mobile\n            if (this.props.pointerMode === 'mouse' && isTouch) {\n                return;\n            }\n\n            // disable on desktop\n            if (this.props.pointerMode === 'touch' && !isTouch) {\n                return;\n            }\n\n            // focus on form input elements\n            const formNodes = ['input', 'textarea', 'button', 'select', 'label'];\n            if (this.props.inputsFocus && formNodes.indexOf(event.target.nodeName.toLowerCase()) > -1) {\n                return;\n            }\n\n            // handle text selection\n            if (this.props.textSelection) {\n                const textNode = textNodeFromPoint(event.target, clientX, clientY);\n                if (textNode) {\n                    return;\n                }\n                clearTextSelection();\n            }\n\n            this.isDragging = true;\n\n            dragOrigin.x = pageX;\n            dragOrigin.y = pageY;\n\n            clientOrigin.x = clientX;\n            clientOrigin.y = clientY;\n\n            this.dragStartPosition.x = this.position.x;\n            this.dragStartPosition.y = this.position.y;\n\n            setDragPosition(event);\n            this.startAnimationLoop();\n\n            if (!isTouch && this.props.pointerDownPreventDefault) {\n                event.preventDefault();\n            }\n        };\n\n        this.events.pointermove = (event) => {\n            // prevent default scroll if scroll direction is locked\n            if (event.cancelable && (this.props.lockScrollOnDragDirection === 'all' ||\n                this.props.lockScrollOnDragDirection === dragDirection)) {\n                event.preventDefault();\n            }\n            setDragPosition(event);\n            this.props.onPointerMove(this.getState(), event, isTouch);\n        };\n\n        this.events.pointerup = (event) => {\n            this.isDragging = false;\n            dragDirection = null;\n            this.props.onPointerUp(this.getState(), event, isTouch);\n        };\n\n        this.events.wheel = (event) => {\n            const state = this.getState();\n            if (!this.props.emulateScroll) {\n                return;\n            }\n            this.velocity.x = 0;\n            this.velocity.y = 0;\n            this.isScrolling = true;\n\n            this.scrollOffset.x = -event.deltaX;\n            this.scrollOffset.y = -event.deltaY;\n\n            this.props.onWheel(state, event);\n\n            this.startAnimationLoop();\n\n            clearTimeout(wheelTimer);\n            wheelTimer = setTimeout(() => (this.isScrolling = false), 80);\n\n            // get (trackpad) scrollDirection and prevent default events\n            if (\n                this.props.preventDefaultOnEmulateScroll &&\n                this.getDragDirection(\n                    this.getDragAngle(-event.deltaX, -event.deltaY),\n                    this.props.dragDirectionTolerance\n                ) === this.props.preventDefaultOnEmulateScroll\n            ) {\n                event.preventDefault();\n            }\n        };\n\n        this.events.scroll = () => {\n            const { scrollLeft, scrollTop } = this.props.viewport;\n            if (Math.abs(this.position.x + scrollLeft) > 3) {\n                this.position.x = -scrollLeft;\n                this.velocity.x = 0;\n            }\n            if (Math.abs(this.position.y + scrollTop) > 3) {\n                this.position.y = -scrollTop;\n                this.velocity.y = 0;\n            }\n        };\n\n        this.events.click = (event) => {\n            const state = this.getState();\n            const dragOffsetX = this.props.direction !== 'vertical' ? state.dragOffset.x : 0;\n            const dragOffsetY = this.props.direction !== 'horizontal' ? state.dragOffset.y : 0;\n            if (Math.max(Math.abs(dragOffsetX), Math.abs(dragOffsetY)) > CLICK_EVENT_THRESHOLD_PX) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this.props.onClick(state, event, isTouch);\n        };\n\n        this.events.contentLoad = () => this.updateMetrics();\n        this.events.resize = () => this.updateMetrics();\n\n        this.props.viewport.addEventListener('mousedown', this.events.pointerdown);\n        this.props.viewport.addEventListener('touchstart', this.events.pointerdown, { passive: false });\n        this.props.viewport.addEventListener('click', this.events.click);\n        this.props.viewport.addEventListener('wheel', this.events.wheel, { passive: false });\n        this.props.viewport.addEventListener('scroll', this.events.scroll);\n        this.props.content.addEventListener('load', this.events.contentLoad, true);\n        window.addEventListener('mousemove', this.events.pointermove);\n        window.addEventListener('touchmove', this.events.pointermove, { passive: false });\n        window.addEventListener('mouseup', this.events.pointerup);\n        window.addEventListener('touchend', this.events.pointerup);\n        window.addEventListener('resize', this.events.resize);\n    }\n\n    /**\n     * Unregister all DOM events\n     */\n    destroy() {\n        this.props.viewport.removeEventListener('mousedown', this.events.pointerdown);\n        this.props.viewport.removeEventListener('touchstart', this.events.pointerdown);\n        this.props.viewport.removeEventListener('click', this.events.click);\n        this.props.viewport.removeEventListener('wheel', this.events.wheel);\n        this.props.viewport.removeEventListener('scroll', this.events.scroll);\n        this.props.content.removeEventListener('load', this.events.contentLoad);\n        window.removeEventListener('mousemove', this.events.pointermove);\n        window.removeEventListener('touchmove', this.events.pointermove);\n        window.removeEventListener('mouseup', this.events.pointerup);\n        window.removeEventListener('touchend', this.events.pointerup);\n        window.removeEventListener('resize', this.events.resize);\n    }\n}\n\n\n//# sourceURL=webpack://big-theater/./node_modules/scrollbooster/src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/assets/js/index.js");
/******/ 	
/******/ })()
;